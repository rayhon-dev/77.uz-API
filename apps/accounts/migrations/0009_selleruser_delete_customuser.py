# Generated by Django 5.2.4 on 2025-08-03 08:55

import common.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("accounts", "0008_customuser_profile_photo"),
        ("auth", "0012_alter_user_first_name_max_length"),
        ("store", "0003_alter_category_options_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="SellerUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(blank=True, null=True, verbose_name="last login"),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("full_name", models.CharField(max_length=255)),
                ("full_name_uz", models.CharField(max_length=255, null=True)),
                ("full_name_ru", models.CharField(max_length=255, null=True)),
                ("project_name", models.CharField(max_length=255)),
                ("project_name_uz", models.CharField(max_length=255, null=True)),
                ("project_name_ru", models.CharField(max_length=255, null=True)),
                ("phone_number", models.CharField(max_length=20, unique=True)),
                (
                    "profile_photo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="profiles/",
                        validators=[common.validators.icon_extensions],
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("super_admin", "Super admin"),
                            ("admin", "Admin"),
                            ("seller", "Sotuvchi"),
                        ],
                        default="seller",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=10,
                    ),
                ),
                (
                    "manual_password",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                ("is_active", models.BooleanField(default=False)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "address",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="accounts.address",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="store.category",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.DeleteModel(
            name="CustomUser",
        ),
    ]
